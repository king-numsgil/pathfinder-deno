export declare const featApi: import("hono/hono-base").HonoBase<import("hono/types").BlankEnv, {
    "/": {
        $get: {
            input: {};
            output: {
                id: string;
                name: string;
                type: import("./entities/types").FeatType[];
                description: string;
                benefit: string;
                normal: string | null;
                special: string | null;
                raceName: string | null;
                note: string | null;
                goal: string | null;
                completionBenefit: string | null;
                source: string;
                multiples: boolean;
                requiredBy: {
                    id: string;
                    parent: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    feat: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    note: string | null;
                }[];
                requisiteFeats: {
                    id: string;
                    parent: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    feat: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    note: string | null;
                }[];
                requisiteSkills: {
                    id: string;
                    parent: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    name: string;
                    rank: number;
                }[];
                requisiteStats: {
                    id: string;
                    parent: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    name: string;
                    value: number;
                }[];
                requisiteSpecial: {
                    id: string;
                    parent: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    condition: string;
                }[];
            }[];
            outputFormat: "json";
            status: import("hono/utils/http-status").StatusCode;
        };
    };
} & {
    "/:id": {
        $get: {
            input: {
                param: {
                    id: string;
                };
            };
            output: never[] | {
                id: string;
                name: string;
                type: import("./entities/types").FeatType[];
                description: string;
                benefit: string;
                normal: string | null;
                special: string | null;
                raceName: string | null;
                note: string | null;
                goal: string | null;
                completionBenefit: string | null;
                source: string;
                multiples: boolean;
                requiredBy: {
                    id: string;
                    parent: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    feat: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    note: string | null;
                }[];
                requisiteFeats: {
                    id: string;
                    parent: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    feat: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    note: string | null;
                }[];
                requisiteSkills: {
                    id: string;
                    parent: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    name: string;
                    rank: number;
                }[];
                requisiteStats: {
                    id: string;
                    parent: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    name: string;
                    value: number;
                }[];
                requisiteSpecial: {
                    id: string;
                    parent: {
                        id: string;
                        name: string;
                        type: import("./entities/types").FeatType[];
                        description: string;
                        benefit: string;
                        normal: string | null;
                        special: string | null;
                        raceName: string | null;
                        note: string | null;
                        goal: string | null;
                        completionBenefit: string | null;
                        source: string;
                        multiples: boolean;
                        requiredBy: string[];
                        requisiteFeats: string[];
                        requisiteSkills: string[];
                        requisiteStats: string[];
                        requisiteSpecial: string[];
                    };
                    condition: string;
                }[];
            };
            outputFormat: "json";
            status: import("hono/utils/http-status").StatusCode;
        };
    };
}, "/">;
